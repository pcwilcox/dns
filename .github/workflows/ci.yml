name: ci

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'

env:
  TEST_TAG: petewilcox/dns:test
  LATEST_TAG: petewilcox/dns:latest

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
          - linux/arm/v6
          - linux/arm/v7
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Setup QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Setup Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: petewilcox/dns
          labels: |
            org.opencontainers.created={{date 'YYYY-MM-DD'}}
            org.opencontainers.version={{version}}
            org.opencontainers.revision={{sha}}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      -
        name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and export to Docker
        uses: docker/build-push-action@v4
        with:
          context: .
          load: true
          platforms: ${{ matrix.platform }}
          tags: |
            ${{ steps.meta.outputs.tags }}
            ${{ env.TEST_TAG }}
          labels: |
            ${{ steps.meta.outputs.labels }}
      -
        name: Test
        run: |
          docker run --rm --env TEST=true ${{ env.TEST_TAG }}
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: ${{ matrix.platform }}
          tags: |
            ${{ steps.meta.outputs.tags }}
            ${{ env.LATEST_TAG }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=petewilcox/dns,push-by-digest=true,name-canonical=true,push=true
      -
        name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"
      -
        name: Upload digest
        uses: actions/upload-artifact@v3
        with:
          name: digests
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1
  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      -
        name: Download digests
        uses: actions/download-artifact@v3
        with:
          name: digests
          path: /tmp/digests
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: petewilcox/dns
          labels: |
            org.opencontainers.created={{date 'YYYY-MM-DD'}}
            org.opencontainers.version={{version}}
            org.opencontainers.revision={{sha}}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf 'petewilcox/dns@sha256:%s ' *)
      -
        name: Inspect image
        run: |
          docker buildx imagetools inspect petewilcox/dns:${{ steps.meta.outputs.version }}
